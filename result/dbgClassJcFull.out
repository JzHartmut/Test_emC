
Test: test_ObjectJc: (emC_Test_ObjectJc/test_ObjectJc.c @ 31) ...
  ok: refl type is ok
  ok: INIZ_VAL_MyType_Test_ObjectJc
  ok: checkStrict_ObjectJc
ok
Test: test_ctor_ObjectJc: (emC_Test_ObjectJc/test_ObjectJc.c @ 89) ...
  ok: refl type is ok
  ok: INIZ_VAL_MyType_Test_ObjectJc
  ok: checkStrict_ObjectJc
ok
Test: test_ALLOC_ObjectJc: (emC_Test_ObjectJc/test_ObjectJc.c @ 117) ...
ok
Test: test_ObjectJcpp_Base: (emC_Test_ObjectJc/test_ObjectJcpp.cpp @ 108) ...
  ok: C++ class detects base struct tyoe via reflection
  ok: offsInstance_Obj is >0 because the class has a virtual table before ObjectJc-data
  ok: Initializing should be set in the post-initializing phase. Is be 0 here.
  ok: Initializing is recognized
  ok: getter for int C-Data
  ok: getter for float C-Data
ok
Test: test_ObjectJc_public: (emC_Test_ObjectJc/test_ObjectJcpp.cpp @ 157) ...
  ok: offsInstance_Obj ==0 because the class has not a virtual table before ObjectJc-data
  ok: sizes C-struct and C++-class are identically because the C++ class does not define any data.
  ok:  *= operation
ok
Test: test_ObjectJc_private_via_accessOper: (emC_Test_ObjectJc/test_ObjectJcpp.cpp @ 179) ...
  ok: offsInstance_Obj ==0 because the class has not a virtual table before ObjectJc-data
  ok: class size is greater because of objectJc element.
  ok:  *= operation
ok