#REM: invoked either from root of Test_emC or from current dir,
#REM but should work from point root of Test_emC
if test -f ../../../src/version_Test_emC.txt; then cd ../../..; fi
pwd

java -jar libs/vishiaBase.jar src/test/ZmakeGcc/evalTests.jztsh                                                                                          

read -n1 -r -p "Press any key to continue..."

exit 0  ##the rest of the file is the JZtxtcmd script                                      
                                                                   
==JZtxtcmd==

include ../ZmakeGcc/test_Selection.jztsh;

currdir=<:><&scriptdir>/../../..<.>;                             

main() {
  call eval1();
}

sub eval1() {
  
  ##for(lineTestSrc: tabTestSrc) {
    ##String nameFnames = <:>build/evalTest_TestEvMsg.txt<.>; 
    ##Openfile fname = nameFnames;                                            
    Stringjar problems;
    Stringjar evalTxt;
    Stringjar h1;
    Stringjar h2;
    Stringjar h3;
    for(lineObj: tabObj) {                       ##build horizontal lines with columns
      for(lineRefl: tabRefl) {
        for(lineStr: tabStr) {                       ##iterate through all possible test cases                            
           h1 += lineObj.select; h2 += lineRefl.select; h3 += lineStr.select; 
    } } }
    evalTxt += <:><&h1><:n><.>;                  ##write column title
    evalTxt += <:><&h2><:n><.>;
    evalTxt += <:><&h3><:n><.>;

    for(lineTestSrc: tabTestSrc) {                       ##iterate through all possible test cases                            
      for(lineThCxt: tabThCxt) {                 ##as lines                 
        for(lineExc: tabExc) {                                  
          List testNames;
          for(lineObj: tabObj) {                 ##iterate through column
            for(lineRefl: tabRefl) {             ##build the file name of the test case
              for(lineStr: tabStr) {
                ##String testName = <:>test_<&lineObj.name>_<&lineRefl.name>_<&lineStr.name>_<&lineThCxt.name>_<&lineExc.name>_TestEvMsg<.>;    ##_<&lineTestSrc.name><.>;
                String testName = <:>test_<&lineObj.name>_<&lineRefl.name>_<&lineStr.name>_<&lineThCxt.name>_<&lineExc.name>_<&lineTestSrc.name><.>;    ##_<&lineTestSrc.name><.>;
                testNames += testName;             ##add the file names to the list, it is all test names in the row for all columns
                ##<+fname><&testName><.+n>
          } } }                                   ##the evaluation routine checks the files of content. 
          String line = java org.vishia.testutil.EvalTestoutfiles.evalFiles(
                            testNames, File:"D:/vishia/emc/Test_emC_result/Linux/result", problems);
          evalTxt += <:><&line> - <&lineThCxt.name> - <&lineExc.name> - <&lineStr.name><:n><.>;
    } } }
    ##fname.close();
    evalTxt += problems;
    java org.vishia.util.FileFunctions.writeFile(evalTxt, File:"build/eval.txt");
    onerror {
      <:>error evalFiles <&error><:n><.>
    }
  ##}


}
