
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Test_Ctrl.h"  
//#include <stddef.h>


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc reflection_Test_Ctrl;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_Test_Ctrl[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc reflection_Par_PID_Ctrl;  //used for field par

extern_C const ClassJc reflection_PID_Ctrl;  //used for field pid
  

extern_C const ClassJc reflection_ObjectJc;  //the super class here used.
const struct SuperClasses_Test_Ctrl_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_Test_Ctrl =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_Test_Ctrl, 1, ClassOffset_idxMtblJc, null, INIZ_ID_ClassOffset_idxMtblJc)
  , { &reflection_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "super"              
      , 0 //arraysize
      , &reflection_ObjectJc  //type of super                                                                                         
      , kEmbedded_Modifier_reflectJc //hint: embd helps to show the real type.
        | (0<< kBitAccessLevel_Modifier_FieldJc)  //access level
        | (7<< kBitChangeLevel_Modifier_FieldJc)  //never change
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &reflection_ObjectJc  
      }
    }
};

const struct Reflection_Fields_Test_Ctrl_t
{ ObjectArrayJc head;
  FieldJc data[9];
} reflection_Fields_Test_Ctrl =
{ INIZ_ObjectArrayJc(reflection_Fields_Test_Ctrl, 9, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "bRun"
    , (uint16)(0 + (1 << kBitNrofBitsInBitfield_FieldJc))                           
    , REFLECTION_BITFIELD                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kBitfield_Modifier_reflectJc //bitModifiers
    , 0 + sizeof(ObjectJc)/* offset on bitfield: offset of element before + sizeof(element before) */
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "ws"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->ws)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "fT1"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->fT1)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "fs"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->fs)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "sT1"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_double                                                                                            
    , (8<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->sT1)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "sI"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_double                                                                                            
    , (8<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->sI)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "s"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->s)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "par"
    , 0   //no Array, no Bitfield                           
    , &reflection_Par_PID_Ctrl                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->par)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  , 
    { "pid"
    , 0   //no Array, no Bitfield                           
    , &reflection_PID_Ctrl                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Test_Ctrl*)(0x1000))->pid)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Test_Ctrl
    }
  
} }; 
 
                                                                   
const ClassJc reflection_Test_Ctrl =
{ INIZ_objReflId_ObjectJc(reflection_Test_Ctrl, &reflection_ClassJc, INIZ_ID_ClassJc)
, "Test_Ctrl"
, 0
, sizeof(Test_Ctrl)
, (FieldJcArray const*)&reflection_Fields_Test_Ctrl  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_Test_Ctrl  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
, null  //virtual table
};

#endif //DEF_REFLECTION_FULL
